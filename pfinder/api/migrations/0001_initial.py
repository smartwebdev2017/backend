# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-06 07:46
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('followers', models.ManyToManyField(related_name='followees', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BSF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vin', models.CharField(max_length=17)),
                ('msrp', models.IntegerField(max_length=11)),
                ('warranty_start', models.CharField(max_length=20)),
                ('model_year', models.IntegerField(max_length=4)),
                ('model_detail', models.TextField()),
                ('color', models.TextField()),
                ('production_month', models.CharField(max_length=7)),
                ('interior', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='BSF_Options',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=11)),
                ('value', models.TextField()),
                ('bsf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.BSF')),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vin_code', models.CharField(default=b'', max_length=17)),
                ('listing_make', models.CharField(max_length=20)),
                ('listing_model', models.CharField(max_length=30)),
                ('listing_trim', models.CharField(max_length=20)),
                ('listing_model_detail', models.CharField(max_length=30)),
                ('listing_year', models.IntegerField(max_length=4)),
                ('mileage', models.IntegerField(max_length=11)),
                ('city', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=10)),
                ('listing_date', models.CharField(max_length=30)),
                ('price', models.IntegerField(max_length=11)),
                ('cond', models.CharField(max_length=10)),
                ('seller_type', models.CharField(max_length=15)),
                ('vhr_link', models.CharField(max_length=255)),
                ('listing_exterior_color', models.CharField(max_length=15)),
                ('listing_interior_color', models.CharField(max_length=15)),
                ('listing_transmission', models.CharField(max_length=15)),
                ('listing_transmission_detail', models.CharField(max_length=255)),
                ('listing_title', models.CharField(max_length=255)),
                ('listing_url', models.CharField(max_length=255)),
                ('listing_engine_size', models.CharField(max_length=10)),
                ('listing_description', models.CharField(max_length=255)),
                ('sold_state', models.IntegerField(max_length=1)),
                ('sold_date', models.CharField(max_length=30)),
                ('listing_body_type', models.CharField(max_length=20)),
                ('listing_drivetrain', models.CharField(max_length=10)),
                ('created', models.CharField(max_length=255)),
                ('updated', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PCF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('longhood', models.IntegerField(max_length=1)),
                ('widebody', models.IntegerField(max_length=1)),
                ('pts', models.IntegerField(max_length=1)),
                ('pccb', models.IntegerField(max_length=1)),
                ('color', models.CharField(max_length=15)),
                ('body_type', models.CharField(max_length=15)),
                ('air_cooled', models.IntegerField(max_length=1)),
                ('gap_to_msrp', models.FloatField()),
                ('listing_age', models.IntegerField(max_length=1)),
                ('lwb_seats', models.IntegerField(max_length=1)),
                ('auto_trans', models.CharField(max_length=15)),
                ('option_code', models.TextField()),
                ('option_description', models.TextField()),
                ('placeholder', models.IntegerField(max_length=2)),
                ('produced_usa', models.IntegerField(max_length=11)),
                ('produced_globally', models.IntegerField(max_length=11)),
                ('same_counts', models.IntegerField(max_length=11)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=b'%Y/%m/%d')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('body', models.TextField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=20)),
                ('url', models.CharField(max_length=255)),
                ('created', models.CharField(max_length=255)),
                ('updated', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='VDF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_number', models.CharField(max_length=17)),
                ('year', models.IntegerField(max_length=4)),
                ('model_detail', models.CharField(max_length=30)),
                ('region', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='VHF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_check', models.TextField()),
                ('accident_check', models.TextField(blank=True, null=True)),
                ('owners', models.TextField(blank=True, null=True)),
                ('recall_count', models.IntegerField(max_length=11)),
            ],
        ),
        migrations.AddField(
            model_name='photo',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='api.Post'),
        ),
        migrations.AddField(
            model_name='car',
            name='pcf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.PCF'),
        ),
        migrations.AddField(
            model_name='car',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sites', to='api.Site'),
        ),
        migrations.AddField(
            model_name='car',
            name='vdf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.VDF'),
        ),
        migrations.AddField(
            model_name='car',
            name='vhf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.VHF'),
        ),
        migrations.AddField(
            model_name='car',
            name='vin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.BSF'),
        ),
    ]
